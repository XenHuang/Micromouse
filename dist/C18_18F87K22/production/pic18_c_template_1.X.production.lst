

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 10 19:05:02 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           	psect	smallconst
    26  001000                     __psmallconst:
    27                           	opt stack 0
    28  001000  00                 	db	0
    29  001001                     _sensorLocation:
    30                           	opt stack 0
    31  001001  1B                 	db	27
    32  001002  2B                 	db	43
    33  001003  1F                 	db	31
    34  001004  33                 	db	51
    35  001005                     __end_of_sensorLocation:
    36                           	opt stack 0
    37  0000                     _ADCON0	set	4034
    38  0000                     _ADCON0bits	set	4034
    39  0000                     _ADCON1	set	4033
    40  0000                     _ADCON2	set	4032
    41  0000                     _ADRESH	set	4036
    42  0000                     _ADRESL	set	4035
    43  0000                     _INTCON	set	4082
    44  0000                     _INTCON2	set	4081
    45  0000                     _INTCONbits	set	4082
    46  0000                     _LATC	set	3979
    47  0000                     _OSCCON	set	4051
    48  0000                     _OSCTUNE	set	3995
    49  0000                     _PORTBbits	set	3969
    50  0000                     _T0CON	set	4053
    51  0000                     _TRISBbits	set	3987
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISEbits	set	3990
    54                           
    55                           ; #config settings
    56  001005  00                 	db	0	; dummy byte at the end
    57  0000                     
    58                           	psect	cinit
    59  0014B2                     __pcinit:
    60                           	opt stack 0
    61  0014B2                     start_initialization:
    62                           	opt stack 0
    63  0014B2                     __initialization:
    64                           	opt stack 0
    65                           
    66                           ; Clear objects allocated to COMRAM (19 bytes)
    67  0014B2  EE00  F03F         	lfsr	0,__pbssCOMRAM
    68  0014B6  0E13               	movlw	19
    69  0014B8                     clear_0:
    70  0014B8  6AEE               	clrf	postinc0,c
    71  0014BA  06E8               	decf	wreg,f,c
    72  0014BC  E1FD               	bnz	clear_0
    73  0014BE                     end_of_initialization:
    74                           	opt stack 0
    75  0014BE                     __end_of__initialization:
    76                           	opt stack 0
    77  0014BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
    78  0014C0  6EF8               	movwf	tblptru,c
    79  0014C2  0100               	movlb	0
    80  0014C4  EF64  F00A         	goto	_main	;jump to C main() function
    81                           tblptru	equ	0xFF8
    82                           postinc0	equ	0xFEE
    83                           wreg	equ	0xFE8
    84                           
    85                           	psect	bssCOMRAM
    86  00003F                     __pbssCOMRAM:
    87                           	opt stack 0
    88  00003F                     _sensorValue:
    89                           	opt stack 0
    90  00003F                     	ds	8
    91  000047                     _LMotorDelayCounter:
    92                           	opt stack 0
    93  000047                     	ds	2
    94  000049                     _MotorDelayCounter:
    95                           	opt stack 0
    96  000049                     	ds	2
    97  00004B                     _RMotorDelayCounter:
    98                           	opt stack 0
    99  00004B                     	ds	2
   100  00004D                     _delay_time:
   101                           	opt stack 0
   102  00004D                     	ds	2
   103  00004F                     _LMotorCounter:
   104                           	opt stack 0
   105  00004F                     	ds	1
   106  000050                     _RMotorCounter:
   107                           	opt stack 0
   108  000050                     	ds	1
   109  000051                     _algorithm:
   110                           	opt stack 0
   111  000051                     	ds	1
   112                           tblptru	equ	0xFF8
   113                           postinc0	equ	0xFEE
   114                           wreg	equ	0xFE8
   115                           
   116                           	psect	cstackBANK0
   117  000080                     __pcstackBANK0:
   118                           	opt stack 0
   119  000080                     sensorUpdate@sensorTemp:
   120                           	opt stack 0
   121                           
   122                           ; 80 bytes @ 0x0
   123  000080                     	ds	80
   124  0000D0                     sensorUpdate@i:
   125                           	opt stack 0
   126                           
   127                           ; 2 bytes @ 0x50
   128  0000D0                     	ds	2
   129  0000D2                     sensorUpdate@j:
   130                           	opt stack 0
   131                           
   132                           ; 2 bytes @ 0x52
   133  0000D2                     	ds	2
   134                           tblptru	equ	0xFF8
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           
   138                           	psect	cstackCOMRAM
   139  000001                     __pcstackCOMRAM:
   140                           	opt stack 0
   141  000001                     ??_low_isr:
   142  000001                     
   143                           ; 0 bytes @ 0x0
   144  000001                     	ds	17
   145  000012                     ??_high_isr:
   146                           
   147                           ; 0 bytes @ 0x11
   148  000012                     	ds	14
   149  000020                     ?___wmul:
   150                           	opt stack 0
   151  000020                     ?___awdiv:
   152                           	opt stack 0
   153  000020                     ___wmul@multiplier:
   154                           	opt stack 0
   155  000020                     ___awdiv@dividend:
   156                           	opt stack 0
   157                           
   158                           ; 2 bytes @ 0x1F
   159  000020                     	ds	2
   160  000022                     ___wmul@multiplicand:
   161                           	opt stack 0
   162  000022                     ___awdiv@divisor:
   163                           	opt stack 0
   164                           
   165                           ; 2 bytes @ 0x21
   166  000022                     	ds	2
   167  000024                     ___awdiv@counter:
   168                           	opt stack 0
   169  000024                     ___wmul@product:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x23
   173  000024                     	ds	1
   174  000025                     ___awdiv@sign:
   175                           	opt stack 0
   176                           
   177                           ; 1 bytes @ 0x24
   178  000025                     	ds	1
   179  000026                     ?_MIN:
   180                           	opt stack 0
   181  000026                     ?_MAX:
   182                           	opt stack 0
   183  000026                     MIN@a:
   184                           	opt stack 0
   185  000026                     MAX@a:
   186                           	opt stack 0
   187  000026                     ___awdiv@quotient:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x25
   191  000026                     	ds	2
   192  000028                     MIN@b:
   193                           	opt stack 0
   194  000028                     MAX@b:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x27
   198  000028                     	ds	2
   199  00002A                     ??_MIN:
   200  00002A                     ??_MAX:
   201                           
   202                           ; 0 bytes @ 0x29
   203  00002A                     	ds	1
   204  00002B                     sensorComputation@sensorTemp:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x2A
   208  00002B                     	ds	2
   209  00002D                     ??_sensorComputation:
   210                           
   211                           ; 0 bytes @ 0x2C
   212  00002D                     	ds	2
   213  00002F                     sensorComputation@max:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x2E
   217  00002F                     	ds	2
   218  000031                     sensorComputation@min:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x30
   222  000031                     	ds	2
   223  000033                     sensorComputation@sum:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0x32
   227  000033                     	ds	2
   228  000035                     sensorComputation@i:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x34
   232  000035                     	ds	2
   233  000037                     sensorComputation@j:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x36
   237  000037                     	ds	2
   238  000039                     ??_sensorUpdate:
   239                           
   240                           ; 0 bytes @ 0x38
   241  000039                     	ds	6
   242  00003F                     tblptru	equ	0xFF8
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           
   246                           ; 0 bytes @ 0x3E
   247 ;;
   248 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   249 ;;
   250 ;; *************** function _main *****************
   251 ;; Defined at:
   252 ;;		line 41 in file "main.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;		None               void
   259 ;; Registers used:
   260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;Total ram usage:        0 bytes
   271 ;; Hardware stack levels required when called:    5
   272 ;; This function calls:
   273 ;;		_ConfigureOscillator
   274 ;;		_InitApp
   275 ;;		_sensorUpdate
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text0
   282  0014C8                     __ptext0:
   283                           	opt stack 0
   284  0014C8                     _main:
   285                           	opt stack 26
   286                           
   287                           ;main.c: 44: ConfigureOscillator();
   288                           
   289                           ;incstack = 0
   290  0014C8  EC6E  F00A         	call	_ConfigureOscillator	;wreg free
   291                           
   292                           ;main.c: 47: InitApp();
   293  0014CC  EC02  F00A         	call	_InitApp	;wreg free
   294  0014D0  D000               	goto	l1072
   295  0014D2                     l1072:
   296                           
   297                           ;main.c: 50: {
   298                           ;main.c: 51: sensorUpdate();
   299  0014D2  ECF5  F008         	call	_sensorUpdate	;wreg free
   300  0014D6  D7FD               	goto	l1072
   301  0014D8  EF51  F000         	goto	start
   302  0014DC                     __end_of_main:
   303                           	opt stack 0
   304                           tblptru	equ	0xFF8
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           
   308 ;; *************** function _sensorUpdate *****************
   309 ;; Defined at:
   310 ;;		line 136 in file "user.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  sensorTemp     80    0[BANK0 ] int [10][4]
   315 ;;  j               2   82[BANK0 ] int 
   316 ;;  i               2   80[BANK0 ] int 
   317 ;; Return value:  Size  Location     Type
   318 ;;		None               void
   319 ;; Registers used:
   320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;      Locals:         0      84       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Totals:         6      84       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;Total ram usage:       90 bytes
   331 ;; Hardware stack levels used:    1
   332 ;; Hardware stack levels required when called:    4
   333 ;; This function calls:
   334 ;;		___wmul
   335 ;;		_sensorComputation
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text1
   342  0011EA                     __ptext1:
   343                           	opt stack 0
   344  0011EA                     _sensorUpdate:
   345                           	opt stack 26
   346                           
   347                           ;user.c: 138: int i,j;
   348                           ;user.c: 139: int sensorTemp[4][10];
   349                           ;user.c: 142: for(i = 0; i < 10; i++)
   350                           
   351                           ;incstack = 0
   352  0011EA  0E00               	movlw	0
   353  0011EC  0100               	movlb	0	; () banked
   354  0011EE  6FD1               	movwf	(sensorUpdate@i+1)& (0+255),b
   355  0011F0  0E00               	movlw	0
   356  0011F2  6FD0               	movwf	sensorUpdate@i& (0+255),b
   357  0011F4                     l1044:
   358                           
   359                           ; BSR set to: 0
   360  0011F4  0100               	movlb	0	; () banked
   361  0011F6  BFD1               	btfsc	(sensorUpdate@i+1)& (0+255),7,b
   362  0011F8  D00A               	goto	l1048
   363  0011FA  0100               	movlb	0	; () banked
   364  0011FC  51D1               	movf	(sensorUpdate@i+1)& (0+255),w,b
   365  0011FE  E167               	bnz	l1068
   366  001200  0E0A               	movlw	10
   367  001202  0100               	movlb	0	; () banked
   368  001204  5DD0               	subwf	sensorUpdate@i& (0+255),w,b
   369  001206  B0D8               	btfsc	status,0,c
   370  001208  D062               	goto	l1068
   371  00120A  D001               	goto	l1048
   372                           
   373                           ; BSR set to: 0
   374  00120C  D060               	goto	l1068
   375  00120E                     l1048:
   376                           
   377                           ; BSR set to: 0
   378                           ;user.c: 143: {
   379                           ;user.c: 144: for(j = 0 ; j < 4 ; j++)
   380  00120E  0E00               	movlw	0
   381  001210  0100               	movlb	0	; () banked
   382  001212  6FD3               	movwf	(sensorUpdate@j+1)& (0+255),b
   383  001214  0E00               	movlw	0
   384  001216  6FD2               	movwf	sensorUpdate@j& (0+255),b
   385  001218                     l1050:
   386                           
   387                           ; BSR set to: 0
   388  001218  0100               	movlb	0	; () banked
   389  00121A  BFD3               	btfsc	(sensorUpdate@j+1)& (0+255),7,b
   390  00121C  D00A               	goto	l1054
   391  00121E  0100               	movlb	0	; () banked
   392  001220  51D3               	movf	(sensorUpdate@j+1)& (0+255),w,b
   393  001222  E150               	bnz	l1064
   394  001224  0E04               	movlw	4
   395  001226  0100               	movlb	0	; () banked
   396  001228  5DD2               	subwf	sensorUpdate@j& (0+255),w,b
   397  00122A  B0D8               	btfsc	status,0,c
   398  00122C  D04B               	goto	l1064
   399  00122E  D001               	goto	l1054
   400                           
   401                           ; BSR set to: 0
   402  001230  D049               	goto	l1064
   403  001232                     l1054:
   404                           
   405                           ; BSR set to: 0
   406                           ;user.c: 145: {
   407                           ;user.c: 146: ADCON0 = sensorLocation[j];
   408  001232  0E01               	movlw	low _sensorLocation
   409  001234  0100               	movlb	0	; () banked
   410  001236  25D2               	addwf	sensorUpdate@j& (0+255),w,b
   411  001238  6EF6               	movwf	tblptrl,c
   412  00123A  0E10               	movlw	high _sensorLocation
   413  00123C  21D3               	addwfc	(sensorUpdate@j+1)& (0+255),w,b
   414  00123E  6EF7               	movwf	tblptrh,c
   415  001240                     	if	0	;There are less than 3 active tblptr bytes
   416  001240                     	endif
   417  001240  0008               	tblrd		*
   418  001242  CFF5 FFC2          	movff	tablat,4034	;volatile
   419                           
   420                           ; BSR set to: 0
   421                           ;user.c: 148: ADCON0bits.GO_DONE = 1;
   422  001246  82C2               	bsf	4034,1,c	;volatile
   423                           
   424                           ;user.c: 149: while(ADCON0bits.GO_DONE != 0);
   425  001248  D000               	goto	l157
   426  00124A                     l157:
   427  00124A  B2C2               	btfsc	4034,1,c	;volatile
   428  00124C  D7FE               	goto	l157
   429                           
   430                           ;user.c: 150: sensorTemp[j][i] = (ADRESH << 2) + (ADRESL >> 6);
   431  00124E  CFC3 F039          	movff	4035,??_sensorUpdate	;volatile
   432  001252  0E06               	movlw	6
   433  001254  6E3A               	movwf	(??_sensorUpdate+1)& (0+255),c
   434  001256                     u455:
   435  001256  90D8               	bcf	status,0,c
   436  001258  3239               	rrcf	??_sensorUpdate,f,c
   437  00125A  2E3A               	decfsz	(??_sensorUpdate+1)& (0+255),f,c
   438  00125C  D7FC               	goto	u455
   439  00125E  5039               	movf	??_sensorUpdate,w,c
   440  001260  CFC4 F03B          	movff	4036,??_sensorUpdate+2	;volatile
   441  001264  6A3C               	clrf	(??_sensorUpdate+3)& (0+255),c
   442  001266  90D8               	bcf	status,0,c
   443  001268  363B               	rlcf	??_sensorUpdate+2,f,c
   444  00126A  363C               	rlcf	??_sensorUpdate+3,f,c
   445  00126C  90D8               	bcf	status,0,c
   446  00126E  363B               	rlcf	??_sensorUpdate+2,f,c
   447  001270  363C               	rlcf	??_sensorUpdate+3,f,c
   448  001272  263B               	addwf	??_sensorUpdate+2,f,c
   449  001274  0E00               	movlw	0
   450  001276  223C               	addwfc	??_sensorUpdate+3,f,c
   451  001278  C0D2  F020         	movff	sensorUpdate@j,___wmul@multiplier
   452  00127C  C0D3  F021         	movff	sensorUpdate@j+1,___wmul@multiplier+1
   453  001280  0E00               	movlw	0
   454  001282  6E23               	movwf	___wmul@multiplicand+1,c
   455  001284  0E14               	movlw	20
   456  001286  6E22               	movwf	___wmul@multiplicand,c
   457  001288  EC1D  F00A         	call	___wmul	;wreg free
   458  00128C  0E80               	movlw	low sensorUpdate@sensorTemp
   459  00128E  6E3D               	movwf	(??_sensorUpdate+4)& (0+255),c
   460  001290  0E00               	movlw	high sensorUpdate@sensorTemp
   461  001292  6E3E               	movwf	(??_sensorUpdate+5)& (0+255),c
   462  001294  5020               	movf	?___wmul,w,c
   463  001296  263D               	addwf	??_sensorUpdate+4,f,c
   464  001298  5021               	movf	?___wmul+1,w,c
   465  00129A  223E               	addwfc	??_sensorUpdate+5,f,c
   466  00129C  90D8               	bcf	status,0,c
   467  00129E  0100               	movlb	0	; () banked
   468  0012A0  35D0               	rlcf	sensorUpdate@i& (0+255),w,b
   469  0012A2  6ED9               	movwf	fsr2l,c
   470  0012A4  0100               	movlb	0	; () banked
   471  0012A6  35D1               	rlcf	(sensorUpdate@i+1)& (0+255),w,b
   472  0012A8  6EDA               	movwf	fsr2h,c
   473  0012AA  503D               	movf	??_sensorUpdate+4,w,c
   474  0012AC  26D9               	addwf	fsr2l,f,c
   475  0012AE  503E               	movf	??_sensorUpdate+5,w,c
   476  0012B0  22DA               	addwfc	fsr2h,f,c
   477  0012B2  C03B  FFDE         	movff	??_sensorUpdate+2,postinc2
   478  0012B6  C03C  FFDD         	movff	??_sensorUpdate+3,postdec2
   479                           
   480                           ; BSR set to: 0
   481  0012BA  0100               	movlb	0	; () banked
   482  0012BC  4BD2               	infsnz	sensorUpdate@j& (0+255),f,b
   483  0012BE  2BD3               	incf	(sensorUpdate@j+1)& (0+255),f,b
   484  0012C0  D7AB               	goto	l1050
   485                           
   486                           ; BSR set to: 0
   487  0012C2  D000               	goto	l1064
   488  0012C4                     l1064:
   489                           
   490                           ; BSR set to: 0
   491  0012C4  0100               	movlb	0	; () banked
   492  0012C6  4BD0               	infsnz	sensorUpdate@i& (0+255),f,b
   493  0012C8  2BD1               	incf	(sensorUpdate@i+1)& (0+255),f,b
   494  0012CA  D794               	goto	l1044
   495                           
   496                           ; BSR set to: 0
   497  0012CC  D000               	goto	l1068
   498  0012CE                     l1068:
   499                           
   500                           ; BSR set to: 0
   501                           ;user.c: 151: }
   502                           ;user.c: 152: }
   503                           ;user.c: 155: sensorComputation(sensorTemp);
   504  0012CE  0E80               	movlw	low sensorUpdate@sensorTemp
   505  0012D0  6E2B               	movwf	sensorComputation@sensorTemp,c
   506  0012D2  0E00               	movlw	high sensorUpdate@sensorTemp
   507  0012D4  6E2C               	movwf	sensorComputation@sensorTemp+1,c
   508  0012D6  EC03  F008         	call	_sensorComputation	;wreg free
   509  0012DA  0012               	return		;funcret
   510  0012DC                     __end_of_sensorUpdate:
   511                           	opt stack 0
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postinc2	equ	0xFDE
   519                           postdec2	equ	0xFDD
   520                           fsr2h	equ	0xFDA
   521                           fsr2l	equ	0xFD9
   522                           status	equ	0xFD8
   523                           
   524 ;; *************** function _sensorComputation *****************
   525 ;; Defined at:
   526 ;;		line 115 in file "user.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  sensorTemp      2   42[COMRAM] PTR int [10]
   529 ;;		 -> sensorUpdate@sensorTemp(80), 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  j               2   54[COMRAM] int 
   532 ;;  i               2   52[COMRAM] int 
   533 ;;  sum             2   50[COMRAM] int 
   534 ;;  min             2   48[COMRAM] int 
   535 ;;  max             2   46[COMRAM] int 
   536 ;; Return value:  Size  Location     Type
   537 ;;		None               void
   538 ;; Registers used:
   539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;Total ram usage:       14 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    3
   552 ;; This function calls:
   553 ;;		_MAX
   554 ;;		_MIN
   555 ;;		___awdiv
   556 ;;		___wmul
   557 ;; This function is called by:
   558 ;;		_sensorUpdate
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text2
   563  001006                     __ptext2:
   564                           	opt stack 0
   565  001006                     _sensorComputation:
   566                           	opt stack 26
   567                           
   568                           ;user.c: 117: int max,min,i,j,sum;
   569                           ;user.c: 118: for(i = 0; i < 4 ; i++)
   570                           
   571                           ;incstack = 0
   572  001006  0E00               	movlw	0
   573  001008  6E36               	movwf	sensorComputation@i+1,c
   574  00100A  0E00               	movlw	0
   575  00100C  6E35               	movwf	sensorComputation@i,c
   576  00100E  BE36               	btfsc	sensorComputation@i+1,7,c
   577  001010  D008               	goto	l1018
   578  001012  5036               	movf	sensorComputation@i+1,w,c
   579  001014  E105               	bnz	u370
   580  001016  0E04               	movlw	4
   581  001018  5C35               	subwf	sensorComputation@i,w,c
   582  00101A  B0D8               	btfsc	status,0,c
   583  00101C  D0E5               	goto	l150
   584  00101E  D001               	goto	l1018
   585  001020                     u370:
   586  001020  D0E3               	goto	l150
   587  001022                     l1018:
   588                           
   589                           ;user.c: 119: {
   590                           ;user.c: 120: for(j = 0 ; j < 10 ; j++)
   591  001022  0E00               	movlw	0
   592  001024  6E38               	movwf	sensorComputation@j+1,c
   593  001026  0E00               	movlw	0
   594  001028  6E37               	movwf	sensorComputation@j,c
   595  00102A  BE38               	btfsc	sensorComputation@j+1,7,c
   596  00102C  D008               	goto	l1024
   597  00102E  5038               	movf	sensorComputation@j+1,w,c
   598  001030  E105               	bnz	u380
   599  001032  0E0A               	movlw	10
   600  001034  5C37               	subwf	sensorComputation@j,w,c
   601  001036  B0D8               	btfsc	status,0,c
   602  001038  D0A8               	goto	l1034
   603  00103A  D001               	goto	l1024
   604  00103C                     u380:
   605  00103C  D0A6               	goto	l1034
   606  00103E                     l1024:
   607                           
   608                           ;user.c: 121: {
   609                           ;user.c: 122: if(j == 0)
   610  00103E  5037               	movf	sensorComputation@j,w,c
   611  001040  1038               	iorwf	sensorComputation@j+1,w,c
   612  001042  A4D8               	btfss	status,2,c
   613  001044  D028               	goto	l1028
   614                           
   615                           ;user.c: 123: {
   616                           ;user.c: 124: sum = min = max = sensorTemp[i][j];
   617  001046  C035  F020         	movff	sensorComputation@i,___wmul@multiplier
   618  00104A  C036  F021         	movff	sensorComputation@i+1,___wmul@multiplier+1
   619  00104E  0E00               	movlw	0
   620  001050  6E23               	movwf	___wmul@multiplicand+1,c
   621  001052  0E14               	movlw	20
   622  001054  6E22               	movwf	___wmul@multiplicand,c
   623  001056  EC1D  F00A         	call	___wmul	;wreg free
   624  00105A  C02B  F02D         	movff	sensorComputation@sensorTemp,??_sensorComputation
   625  00105E  C02C  F02E         	movff	sensorComputation@sensorTemp+1,??_sensorComputation+1
   626  001062  5020               	movf	?___wmul,w,c
   627  001064  262D               	addwf	??_sensorComputation,f,c
   628  001066  5021               	movf	?___wmul+1,w,c
   629  001068  222E               	addwfc	??_sensorComputation+1,f,c
   630  00106A  90D8               	bcf	status,0,c
   631  00106C  3437               	rlcf	sensorComputation@j,w,c
   632  00106E  6ED9               	movwf	fsr2l,c
   633  001070  3438               	rlcf	sensorComputation@j+1,w,c
   634  001072  6EDA               	movwf	fsr2h,c
   635  001074  502D               	movf	??_sensorComputation,w,c
   636  001076  26D9               	addwf	fsr2l,f,c
   637  001078  502E               	movf	??_sensorComputation+1,w,c
   638  00107A  22DA               	addwfc	fsr2h,f,c
   639  00107C  CFDE F02F          	movff	postinc2,sensorComputation@max
   640  001080  CFDD F030          	movff	postdec2,sensorComputation@max+1
   641  001084  C02F  F031         	movff	sensorComputation@max,sensorComputation@min
   642  001088  C030  F032         	movff	sensorComputation@max+1,sensorComputation@min+1
   643  00108C  C031  F033         	movff	sensorComputation@min,sensorComputation@sum
   644  001090  C032  F034         	movff	sensorComputation@min+1,sensorComputation@sum+1
   645                           
   646                           ;user.c: 125: continue;
   647  001094  D072               	goto	l1030
   648  001096                     l1028:
   649                           
   650                           ;user.c: 126: }
   651                           ;user.c: 127: min = MIN(sensorTemp[i][j],min);
   652  001096  C035  F020         	movff	sensorComputation@i,___wmul@multiplier
   653  00109A  C036  F021         	movff	sensorComputation@i+1,___wmul@multiplier+1
   654  00109E  0E00               	movlw	0
   655  0010A0  6E23               	movwf	___wmul@multiplicand+1,c
   656  0010A2  0E14               	movlw	20
   657  0010A4  6E22               	movwf	___wmul@multiplicand,c
   658  0010A6  EC1D  F00A         	call	___wmul	;wreg free
   659  0010AA  C02B  F02D         	movff	sensorComputation@sensorTemp,??_sensorComputation
   660  0010AE  C02C  F02E         	movff	sensorComputation@sensorTemp+1,??_sensorComputation+1
   661  0010B2  5020               	movf	?___wmul,w,c
   662  0010B4  262D               	addwf	??_sensorComputation,f,c
   663  0010B6  5021               	movf	?___wmul+1,w,c
   664  0010B8  222E               	addwfc	??_sensorComputation+1,f,c
   665  0010BA  90D8               	bcf	status,0,c
   666  0010BC  3437               	rlcf	sensorComputation@j,w,c
   667  0010BE  6ED9               	movwf	fsr2l,c
   668  0010C0  3438               	rlcf	sensorComputation@j+1,w,c
   669  0010C2  6EDA               	movwf	fsr2h,c
   670  0010C4  502D               	movf	??_sensorComputation,w,c
   671  0010C6  26D9               	addwf	fsr2l,f,c
   672  0010C8  502E               	movf	??_sensorComputation+1,w,c
   673  0010CA  22DA               	addwfc	fsr2h,f,c
   674  0010CC  CFDE F026          	movff	postinc2,MIN@a
   675  0010D0  CFDD F027          	movff	postdec2,MIN@a+1
   676  0010D4  C031  F028         	movff	sensorComputation@min,MIN@b
   677  0010D8  C032  F029         	movff	sensorComputation@min+1,MIN@b+1
   678  0010DC  EC31  F00A         	call	_MIN	;wreg free
   679  0010E0  C026  F031         	movff	?_MIN,sensorComputation@min
   680  0010E4  C027  F032         	movff	?_MIN+1,sensorComputation@min+1
   681                           
   682                           ;user.c: 128: max = MAX(sensorTemp[i][j],max);
   683  0010E8  C035  F020         	movff	sensorComputation@i,___wmul@multiplier
   684  0010EC  C036  F021         	movff	sensorComputation@i+1,___wmul@multiplier+1
   685  0010F0  0E00               	movlw	0
   686  0010F2  6E23               	movwf	___wmul@multiplicand+1,c
   687  0010F4  0E14               	movlw	20
   688  0010F6  6E22               	movwf	___wmul@multiplicand,c
   689  0010F8  EC1D  F00A         	call	___wmul	;wreg free
   690  0010FC  C02B  F02D         	movff	sensorComputation@sensorTemp,??_sensorComputation
   691  001100  C02C  F02E         	movff	sensorComputation@sensorTemp+1,??_sensorComputation+1
   692  001104  5020               	movf	?___wmul,w,c
   693  001106  262D               	addwf	??_sensorComputation,f,c
   694  001108  5021               	movf	?___wmul+1,w,c
   695  00110A  222E               	addwfc	??_sensorComputation+1,f,c
   696  00110C  90D8               	bcf	status,0,c
   697  00110E  3437               	rlcf	sensorComputation@j,w,c
   698  001110  6ED9               	movwf	fsr2l,c
   699  001112  3438               	rlcf	sensorComputation@j+1,w,c
   700  001114  6EDA               	movwf	fsr2h,c
   701  001116  502D               	movf	??_sensorComputation,w,c
   702  001118  26D9               	addwf	fsr2l,f,c
   703  00111A  502E               	movf	??_sensorComputation+1,w,c
   704  00111C  22DA               	addwfc	fsr2h,f,c
   705  00111E  CFDE F026          	movff	postinc2,MAX@a
   706  001122  CFDD F027          	movff	postdec2,MAX@a+1
   707  001126  C02F  F028         	movff	sensorComputation@max,MAX@b
   708  00112A  C030  F029         	movff	sensorComputation@max+1,MAX@b+1
   709  00112E  EC45  F00A         	call	_MAX	;wreg free
   710  001132  C026  F02F         	movff	?_MAX,sensorComputation@max
   711  001136  C027  F030         	movff	?_MAX+1,sensorComputation@max+1
   712                           
   713                           ;user.c: 129: sum += sensorTemp[i][j];
   714  00113A  C035  F020         	movff	sensorComputation@i,___wmul@multiplier
   715  00113E  C036  F021         	movff	sensorComputation@i+1,___wmul@multiplier+1
   716  001142  0E00               	movlw	0
   717  001144  6E23               	movwf	___wmul@multiplicand+1,c
   718  001146  0E14               	movlw	20
   719  001148  6E22               	movwf	___wmul@multiplicand,c
   720  00114A  EC1D  F00A         	call	___wmul	;wreg free
   721  00114E  C02B  F02D         	movff	sensorComputation@sensorTemp,??_sensorComputation
   722  001152  C02C  F02E         	movff	sensorComputation@sensorTemp+1,??_sensorComputation+1
   723  001156  5020               	movf	?___wmul,w,c
   724  001158  262D               	addwf	??_sensorComputation,f,c
   725  00115A  5021               	movf	?___wmul+1,w,c
   726  00115C  222E               	addwfc	??_sensorComputation+1,f,c
   727  00115E  90D8               	bcf	status,0,c
   728  001160  3437               	rlcf	sensorComputation@j,w,c
   729  001162  6ED9               	movwf	fsr2l,c
   730  001164  3438               	rlcf	sensorComputation@j+1,w,c
   731  001166  6EDA               	movwf	fsr2h,c
   732  001168  502D               	movf	??_sensorComputation,w,c
   733  00116A  26D9               	addwf	fsr2l,f,c
   734  00116C  502E               	movf	??_sensorComputation+1,w,c
   735  00116E  22DA               	addwfc	fsr2h,f,c
   736  001170  50DE               	movf	postinc2,w,c
   737  001172  2633               	addwf	sensorComputation@sum,f,c
   738  001174  50DD               	movf	postdec2,w,c
   739  001176  2234               	addwfc	sensorComputation@sum+1,f,c
   740  001178  D000               	goto	l1030
   741  00117A                     l1030:
   742  00117A  4A37               	infsnz	sensorComputation@j,f,c
   743  00117C  2A38               	incf	sensorComputation@j+1,f,c
   744  00117E  BE38               	btfsc	sensorComputation@j+1,7,c
   745  001180  D75E               	goto	l1024
   746  001182  5038               	movf	sensorComputation@j+1,w,c
   747  001184  E102               	bnz	l1034
   748  001186  D755               	goto	L2
   749  001188  D000               	goto	l1034
   750  00118A                     l1034:
   751                           
   752                           ;user.c: 130: }
   753                           ;user.c: 131: sum = sum - min - max;
   754  00118A  502F               	movf	sensorComputation@max,w,c
   755  00118C  2431               	addwf	sensorComputation@min,w,c
   756  00118E  6E2D               	movwf	??_sensorComputation& (0+255),c
   757  001190  5030               	movf	sensorComputation@max+1,w,c
   758  001192  2032               	addwfc	sensorComputation@min+1,w,c
   759  001194  6E2E               	movwf	(??_sensorComputation+1)& (0+255),c
   760  001196  1E2D               	comf	??_sensorComputation,f,c
   761  001198  1E2E               	comf	??_sensorComputation+1,f,c
   762  00119A  4A2D               	infsnz	??_sensorComputation,f,c
   763  00119C  2A2E               	incf	??_sensorComputation+1,f,c
   764  00119E  5033               	movf	sensorComputation@sum,w,c
   765  0011A0  242D               	addwf	??_sensorComputation,w,c
   766  0011A2  6E33               	movwf	sensorComputation@sum,c
   767  0011A4  5034               	movf	sensorComputation@sum+1,w,c
   768  0011A6  202E               	addwfc	??_sensorComputation+1,w,c
   769  0011A8  6E34               	movwf	sensorComputation@sum+1,c
   770                           
   771                           ;user.c: 132: sensorValue[i] = sum/(10-2);
   772  0011AA  C033  F020         	movff	sensorComputation@sum,___awdiv@dividend
   773  0011AE  C034  F021         	movff	sensorComputation@sum+1,___awdiv@dividend+1
   774  0011B2  0E00               	movlw	0
   775  0011B4  6E23               	movwf	___awdiv@divisor+1,c
   776  0011B6  0E08               	movlw	8
   777  0011B8  6E22               	movwf	___awdiv@divisor,c
   778  0011BA  EC6E  F009         	call	___awdiv	;wreg free
   779  0011BE  90D8               	bcf	status,0,c
   780  0011C0  3435               	rlcf	sensorComputation@i,w,c
   781  0011C2  6ED9               	movwf	fsr2l,c
   782  0011C4  3436               	rlcf	sensorComputation@i+1,w,c
   783  0011C6  6EDA               	movwf	fsr2h,c
   784  0011C8  0E3F               	movlw	low _sensorValue
   785  0011CA  26D9               	addwf	fsr2l,f,c
   786  0011CC  0E00               	movlw	high _sensorValue
   787  0011CE  22DA               	addwfc	fsr2h,f,c
   788  0011D0  C020  FFDE         	movff	?___awdiv,postinc2
   789  0011D4  C021  FFDD         	movff	?___awdiv+1,postdec2
   790  0011D8  4A35               	infsnz	sensorComputation@i,f,c
   791  0011DA  2A36               	incf	sensorComputation@i+1,f,c
   792  0011DC  BE36               	btfsc	sensorComputation@i+1,7,c
   793  0011DE  D721               	goto	l1018
   794  0011E0  5036               	movf	sensorComputation@i+1,w,c
   795  0011E2  E102               	bnz	l150
   796  0011E4  D718               	goto	L3
   797  0011E6  D000               	goto	l150
   798  0011E8                     l150:
   799  0011E8  0012               	return		;funcret
   800  0011EA                     __end_of_sensorComputation:
   801                           	opt stack 0
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           postinc2	equ	0xFDE
   809                           postdec2	equ	0xFDD
   810                           fsr2h	equ	0xFDA
   811                           fsr2l	equ	0xFD9
   812                           status	equ	0xFD8
   813                           
   814 ;; *************** function ___wmul *****************
   815 ;; Defined at:
   816 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  multiplier      2   31[COMRAM] unsigned int 
   819 ;;  multiplicand    2   33[COMRAM] unsigned int 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  product         2   35[COMRAM] unsigned int 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  2   31[COMRAM] unsigned int 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, prodl, prodh
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;Total ram usage:        6 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    2
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_sensorComputation
   842 ;;		_sensorUpdate
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text3
   847  00143A                     __ptext3:
   848                           	opt stack 0
   849  00143A                     ___wmul:
   850                           	opt stack 26
   851                           
   852                           ;incstack = 0
   853  00143A  5020               	movf	___wmul@multiplier,w,c
   854  00143C  0222               	mulwf	___wmul@multiplicand,c
   855  00143E  CFF3 F024          	movff	prodl,___wmul@product
   856  001442  CFF4 F025          	movff	prodh,___wmul@product+1
   857  001446  5020               	movf	___wmul@multiplier,w,c
   858  001448  0223               	mulwf	___wmul@multiplicand+1,c
   859  00144A  50F3               	movf	prodl,w,c
   860  00144C  2625               	addwf	___wmul@product+1,f,c
   861  00144E  5021               	movf	___wmul@multiplier+1,w,c
   862  001450  0222               	mulwf	___wmul@multiplicand,c
   863  001452  50F3               	movf	prodl,w,c
   864  001454  2625               	addwf	___wmul@product+1,f,c
   865  001456  C024  F020         	movff	___wmul@product,?___wmul
   866  00145A  C025  F021         	movff	___wmul@product+1,?___wmul+1
   867  00145E  D000               	goto	l171
   868  001460                     l171:
   869  001460  0012               	return		;funcret
   870  001462                     __end_of___wmul:
   871                           	opt stack 0
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           prodh	equ	0xFF4
   877                           prodl	equ	0xFF3
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           postinc2	equ	0xFDE
   881                           postdec2	equ	0xFDD
   882                           fsr2h	equ	0xFDA
   883                           fsr2l	equ	0xFD9
   884                           status	equ	0xFD8
   885                           
   886 ;; *************** function ___awdiv *****************
   887 ;; Defined at:
   888 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  dividend        2   31[COMRAM] int 
   891 ;;  divisor         2   33[COMRAM] int 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  quotient        2   37[COMRAM] int 
   894 ;;  sign            1   36[COMRAM] unsigned char 
   895 ;;  counter         1   35[COMRAM] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2   31[COMRAM] int 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;Total ram usage:        8 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    2
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_sensorComputation
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text4
   920  0012DC                     __ptext4:
   921                           	opt stack 0
   922  0012DC                     ___awdiv:
   923                           	opt stack 26
   924                           
   925                           ;incstack = 0
   926  0012DC  0E00               	movlw	0
   927  0012DE  6E25               	movwf	___awdiv@sign,c
   928  0012E0  AE23               	btfss	___awdiv@divisor+1,7,c
   929  0012E2  D007               	goto	l976
   930  0012E4  6C22               	negf	___awdiv@divisor,c
   931  0012E6  1E23               	comf	___awdiv@divisor+1,f,c
   932  0012E8  B0D8               	btfsc	status,0,c
   933  0012EA  2A23               	incf	___awdiv@divisor+1,f,c
   934  0012EC  0E01               	movlw	1
   935  0012EE  6E25               	movwf	___awdiv@sign,c
   936  0012F0  D000               	goto	l976
   937  0012F2                     l976:
   938  0012F2  AE21               	btfss	___awdiv@dividend+1,7,c
   939  0012F4  D007               	goto	l982
   940  0012F6  6C20               	negf	___awdiv@dividend,c
   941  0012F8  1E21               	comf	___awdiv@dividend+1,f,c
   942  0012FA  B0D8               	btfsc	status,0,c
   943  0012FC  2A21               	incf	___awdiv@dividend+1,f,c
   944  0012FE  0E01               	movlw	1
   945  001300  1A25               	xorwf	___awdiv@sign,f,c
   946  001302  D000               	goto	l982
   947  001304                     l982:
   948  001304  0E00               	movlw	0
   949  001306  6E27               	movwf	___awdiv@quotient+1,c
   950  001308  0E00               	movlw	0
   951  00130A  6E26               	movwf	___awdiv@quotient,c
   952  00130C  5022               	movf	___awdiv@divisor,w,c
   953  00130E  1023               	iorwf	___awdiv@divisor+1,w,c
   954  001310  B4D8               	btfsc	status,2,c
   955  001312  D021               	goto	l1004
   956  001314  0E01               	movlw	1
   957  001316  6E24               	movwf	___awdiv@counter,c
   958  001318  D005               	goto	l990
   959  00131A                     l988:
   960  00131A  90D8               	bcf	status,0,c
   961  00131C  3622               	rlcf	___awdiv@divisor,f,c
   962  00131E  3623               	rlcf	___awdiv@divisor+1,f,c
   963  001320  2A24               	incf	___awdiv@counter,f,c
   964  001322  D000               	goto	l990
   965  001324                     l990:
   966  001324  BE23               	btfsc	___awdiv@divisor+1,7,c
   967  001326  D002               	goto	l992
   968  001328  D7F8               	goto	l988
   969  00132A  D000               	goto	l992
   970  00132C                     l992:
   971  00132C  90D8               	bcf	status,0,c
   972  00132E  3626               	rlcf	___awdiv@quotient,f,c
   973  001330  3627               	rlcf	___awdiv@quotient+1,f,c
   974  001332  5022               	movf	___awdiv@divisor,w,c
   975  001334  5C20               	subwf	___awdiv@dividend,w,c
   976  001336  5023               	movf	___awdiv@divisor+1,w,c
   977  001338  5821               	subwfb	___awdiv@dividend+1,w,c
   978  00133A  A0D8               	btfss	status,0,c
   979  00133C  D006               	goto	l1000
   980  00133E  5022               	movf	___awdiv@divisor,w,c
   981  001340  5E20               	subwf	___awdiv@dividend,f,c
   982  001342  5023               	movf	___awdiv@divisor+1,w,c
   983  001344  5A21               	subwfb	___awdiv@dividend+1,f,c
   984  001346  8026               	bsf	___awdiv@quotient,0,c
   985  001348  D000               	goto	l1000
   986  00134A                     l1000:
   987  00134A  90D8               	bcf	status,0,c
   988  00134C  3223               	rrcf	___awdiv@divisor+1,f,c
   989  00134E  3222               	rrcf	___awdiv@divisor,f,c
   990  001350  2E24               	decfsz	___awdiv@counter,f,c
   991  001352  D7EC               	goto	l992
   992  001354  D000               	goto	l1004
   993  001356                     l1004:
   994  001356  5025               	movf	___awdiv@sign,w,c
   995  001358  B4D8               	btfsc	status,2,c
   996  00135A  D005               	goto	l1008
   997  00135C  6C26               	negf	___awdiv@quotient,c
   998  00135E  1E27               	comf	___awdiv@quotient+1,f,c
   999  001360  B0D8               	btfsc	status,0,c
  1000  001362  2A27               	incf	___awdiv@quotient+1,f,c
  1001  001364  D000               	goto	l1008
  1002  001366                     l1008:
  1003  001366  C026  F020         	movff	___awdiv@quotient,?___awdiv
  1004  00136A  C027  F021         	movff	___awdiv@quotient+1,?___awdiv+1
  1005  00136E  D000               	goto	l364
  1006  001370                     l364:
  1007  001370  0012               	return		;funcret
  1008  001372                     __end_of___awdiv:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           prodh	equ	0xFF4
  1015                           prodl	equ	0xFF3
  1016                           postinc0	equ	0xFEE
  1017                           wreg	equ	0xFE8
  1018                           postinc2	equ	0xFDE
  1019                           postdec2	equ	0xFDD
  1020                           fsr2h	equ	0xFDA
  1021                           fsr2l	equ	0xFD9
  1022                           status	equ	0xFD8
  1023                           
  1024 ;; *************** function _MIN *****************
  1025 ;; Defined at:
  1026 ;;		line 159 in file "user.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  a               2   37[COMRAM] int 
  1029 ;;  b               2   39[COMRAM] int 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  2   37[COMRAM] int 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;Total ram usage:        5 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    2
  1048 ;; This function calls:
  1049 ;;		Nothing
  1050 ;; This function is called by:
  1051 ;;		_sensorComputation
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text5
  1056  001462                     __ptext5:
  1057                           	opt stack 0
  1058  001462                     _MIN:
  1059                           	opt stack 26
  1060                           
  1061                           ;user.c: 161: if(a>b) return b;
  1062                           
  1063                           ;incstack = 0
  1064  001462  5026               	movf	MIN@a,w,c
  1065  001464  5C28               	subwf	MIN@b,w,c
  1066  001466  5029               	movf	MIN@b+1,w,c
  1067  001468  0A80               	xorlw	128
  1068  00146A  6E2A               	movwf	??_MIN& (0+255),c
  1069  00146C  5027               	movf	MIN@a+1,w,c
  1070  00146E  0A80               	xorlw	128
  1071  001470  582A               	subwfb	??_MIN& (0+255),w,c
  1072  001472  B0D8               	btfsc	status,0,c
  1073  001474  D005               	goto	l163
  1074  001476  C028  F026         	movff	MIN@b,?_MIN
  1075  00147A  C029  F027         	movff	MIN@b+1,?_MIN+1
  1076  00147E  D004               	goto	l164
  1077  001480                     l163:
  1078                           
  1079                           ;user.c: 162: return a;
  1080  001480  C026  F026         	movff	MIN@a,?_MIN
  1081  001484  C027  F027         	movff	MIN@a+1,?_MIN+1
  1082  001488                     l164:
  1083  001488  0012               	return		;funcret
  1084  00148A                     __end_of_MIN:
  1085                           	opt stack 0
  1086                           tblptru	equ	0xFF8
  1087                           tblptrh	equ	0xFF7
  1088                           tblptrl	equ	0xFF6
  1089                           tablat	equ	0xFF5
  1090                           prodh	equ	0xFF4
  1091                           prodl	equ	0xFF3
  1092                           postinc0	equ	0xFEE
  1093                           wreg	equ	0xFE8
  1094                           postinc2	equ	0xFDE
  1095                           postdec2	equ	0xFDD
  1096                           fsr2h	equ	0xFDA
  1097                           fsr2l	equ	0xFD9
  1098                           status	equ	0xFD8
  1099                           
  1100 ;; *************** function _MAX *****************
  1101 ;; Defined at:
  1102 ;;		line 165 in file "user.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  a               2   37[COMRAM] int 
  1105 ;;  b               2   39[COMRAM] int 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  2   37[COMRAM] int 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;Total ram usage:        5 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    2
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_sensorComputation
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text6
  1132  00148A                     __ptext6:
  1133                           	opt stack 0
  1134  00148A                     _MAX:
  1135                           	opt stack 26
  1136                           
  1137                           ;user.c: 167: if(a>b) return a;
  1138                           
  1139                           ;incstack = 0
  1140  00148A  5026               	movf	MAX@a,w,c
  1141  00148C  5C28               	subwf	MAX@b,w,c
  1142  00148E  5029               	movf	MAX@b+1,w,c
  1143  001490  0A80               	xorlw	128
  1144  001492  6E2A               	movwf	??_MAX& (0+255),c
  1145  001494  5027               	movf	MAX@a+1,w,c
  1146  001496  0A80               	xorlw	128
  1147  001498  582A               	subwfb	??_MAX& (0+255),w,c
  1148  00149A  B0D8               	btfsc	status,0,c
  1149  00149C  D005               	goto	l167
  1150  00149E  C026  F026         	movff	MAX@a,?_MAX
  1151  0014A2  C027  F027         	movff	MAX@a+1,?_MAX+1
  1152  0014A6  D004               	goto	l168
  1153  0014A8                     l167:
  1154                           
  1155                           ;user.c: 168: return b;
  1156  0014A8  C028  F026         	movff	MAX@b,?_MAX
  1157  0014AC  C029  F027         	movff	MAX@b+1,?_MAX+1
  1158  0014B0                     l168:
  1159  0014B0  0012               	return		;funcret
  1160  0014B2                     __end_of_MAX:
  1161                           	opt stack 0
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           prodh	equ	0xFF4
  1167                           prodl	equ	0xFF3
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           postinc2	equ	0xFDE
  1171                           postdec2	equ	0xFDD
  1172                           fsr2h	equ	0xFDA
  1173                           fsr2l	equ	0xFD9
  1174                           status	equ	0xFD8
  1175                           
  1176 ;; *************** function _InitApp *****************
  1177 ;; Defined at:
  1178 ;;		line 35 in file "user.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;		None               void
  1185 ;; Registers used:
  1186 ;;		wreg, status,2
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    2
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text7
  1207  001404                     __ptext7:
  1208                           	opt stack 0
  1209  001404                     _InitApp:
  1210                           	opt stack 28
  1211                           
  1212                           ;user.c: 39: TRISC = 0;
  1213                           
  1214                           ;incstack = 0
  1215  001404  0E00               	movlw	0
  1216  001406  6E94               	movwf	3988,c	;volatile
  1217                           
  1218                           ;user.c: 43: TRISEbits.TRISE1=1;
  1219  001408  8296               	bsf	3990,1,c	;volatile
  1220                           
  1221                           ;user.c: 45: TRISEbits.TRISE2=1;
  1222  00140A  8496               	bsf	3990,2,c	;volatile
  1223                           
  1224                           ;user.c: 47: TRISBbits.RB1=1;
  1225  00140C  8293               	bsf	3987,1,c	;volatile
  1226                           
  1227                           ;user.c: 49: TRISBbits.RB0=1;
  1228  00140E  8093               	bsf	3987,0,c	;volatile
  1229                           
  1230                           ;user.c: 52: TRISBbits.RB3=1;
  1231  001410  8693               	bsf	3987,3,c	;volatile
  1232                           
  1233                           ;user.c: 54: TRISBbits.RB2=1;
  1234  001412  8493               	bsf	3987,2,c	;volatile
  1235                           
  1236                           ;user.c: 57: if(PORTBbits.RB3 == TRUE)
  1237  001414  A681               	btfss	3969,3,c	;volatile
  1238  001416  D002               	goto	l866
  1239                           
  1240                           ;user.c: 58: algorithm = LEFTWALL;
  1241  001418  0E00               	movlw	0
  1242  00141A  D001               	goto	L4
  1243  00141C                     l866:
  1244                           
  1245                           ;user.c: 59: else
  1246                           ;user.c: 60: algorithm = RIGHTWALL;
  1247  00141C  0E01               	movlw	1
  1248  00141E                     L4:
  1249  00141E  6E51               	movwf	_algorithm,c
  1250                           
  1251                           ;user.c: 63: ADCON1 =0b00000001;
  1252  001420  0E01               	movlw	1
  1253  001422  6EC1               	movwf	4033,c	;volatile
  1254                           
  1255                           ;user.c: 68: ADCON2=0b00001010;
  1256  001424  0E0A               	movlw	10
  1257  001426  6EC0               	movwf	4032,c	;volatile
  1258                           
  1259                           ;user.c: 73: ADCON0=0b00101011;
  1260  001428  0E2B               	movlw	43
  1261  00142A  6EC2               	movwf	4034,c	;volatile
  1262                           
  1263                           ;user.c: 82: T0CON = 0b11000100;
  1264  00142C  0EC4               	movlw	196
  1265  00142E  6ED5               	movwf	4053,c	;volatile
  1266                           
  1267                           ;user.c: 90: INTCON2 = 0b11110100;
  1268  001430  0EF4               	movlw	244
  1269  001432  6EF1               	movwf	intcon2,c	;volatile
  1270                           
  1271                           ;user.c: 100: INTCON = 0b00100000;
  1272  001434  0E20               	movlw	32
  1273  001436  6EF2               	movwf	intcon,c	;volatile
  1274  001438  0012               	return		;funcret
  1275  00143A                     __end_of_InitApp:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           prodh	equ	0xFF4
  1282                           prodl	equ	0xFF3
  1283                           intcon	equ	0xFF2
  1284                           intcon2	equ	0xFF1
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           postinc2	equ	0xFDE
  1288                           postdec2	equ	0xFDD
  1289                           fsr2h	equ	0xFDA
  1290                           fsr2l	equ	0xFD9
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function _ConfigureOscillator *****************
  1294 ;; Defined at:
  1295 ;;		line 24 in file "system.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;		None               void
  1302 ;; Registers used:
  1303 ;;		wreg, status,2
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    2
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text8
  1324  0014DC                     __ptext8:
  1325                           	opt stack 0
  1326  0014DC                     _ConfigureOscillator:
  1327                           	opt stack 28
  1328                           
  1329                           ;system.c: 29: OSCCON = 0b01111100;
  1330                           
  1331                           ;incstack = 0
  1332  0014DC  0E7C               	movlw	124
  1333  0014DE  6ED3               	movwf	4051,c	;volatile
  1334                           
  1335                           ;system.c: 31: OSCTUNE = 0b01001111;
  1336  0014E0  0E4F               	movlw	79
  1337  0014E2  6E9B               	movwf	3995,c	;volatile
  1338  0014E4  0012               	return		;funcret
  1339  0014E6                     __end_of_ConfigureOscillator:
  1340                           	opt stack 0
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           prodh	equ	0xFF4
  1346                           prodl	equ	0xFF3
  1347                           intcon	equ	0xFF2
  1348                           intcon2	equ	0xFF1
  1349                           postinc0	equ	0xFEE
  1350                           wreg	equ	0xFE8
  1351                           postinc2	equ	0xFDE
  1352                           postdec2	equ	0xFDD
  1353                           fsr2h	equ	0xFDA
  1354                           fsr2l	equ	0xFD9
  1355                           status	equ	0xFD8
  1356                           
  1357 ;; *************** function _low_isr *****************
  1358 ;; Defined at:
  1359 ;;		line 102 in file "interrupts.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;		None               void
  1366 ;; Registers used:
  1367 ;;		None
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;Total ram usage:       17 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		Interrupt level 1
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	intcodelo
  1388  000018                     __pintcodelo:
  1389                           	opt stack 0
  1390  000018                     _low_isr:
  1391                           	opt stack 26
  1392                           
  1393                           ;incstack = 0
  1394  000018  CFD8 F001          	movff	status,??_low_isr
  1395  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
  1396  000020  CFE0 F003          	movff	bsr,??_low_isr+2
  1397  000024  CFFA F004          	movff	pclath,??_low_isr+3
  1398  000028  CFFB F005          	movff	pclatu,??_low_isr+4
  1399  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
  1400  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
  1401  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
  1402  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
  1403  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
  1404  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
  1405  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
  1406  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
  1407  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
  1408  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
  1409  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
  1410  000058  CFF5 F011          	movff	tablat,??_low_isr+16
  1411  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
  1412  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
  1413  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
  1414  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
  1415  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
  1416  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
  1417  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
  1418  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
  1419  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
  1420  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
  1421  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
  1422  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
  1423  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
  1424  000090  C004  FFFA         	movff	??_low_isr+3,pclath
  1425  000094  C003  FFE0         	movff	??_low_isr+2,bsr
  1426  000098  C002  FFE8         	movff	??_low_isr+1,wreg
  1427  00009C  C001  FFD8         	movff	??_low_isr,status
  1428  0000A0  0010               	retfie	
  1429  0000A2                     __end_of_low_isr:
  1430                           	opt stack 0
  1431                           pclatu	equ	0xFFB
  1432                           pclath	equ	0xFFA
  1433                           tblptru	equ	0xFF8
  1434                           tblptrh	equ	0xFF7
  1435                           tblptrl	equ	0xFF6
  1436                           tablat	equ	0xFF5
  1437                           prodh	equ	0xFF4
  1438                           prodl	equ	0xFF3
  1439                           intcon	equ	0xFF2
  1440                           intcon2	equ	0xFF1
  1441                           postinc0	equ	0xFEE
  1442                           fsr0h	equ	0xFEA
  1443                           fsr0l	equ	0xFE9
  1444                           wreg	equ	0xFE8
  1445                           fsr1h	equ	0xFE2
  1446                           fsr1l	equ	0xFE1
  1447                           bsr	equ	0xFE0
  1448                           postinc2	equ	0xFDE
  1449                           postdec2	equ	0xFDD
  1450                           fsr2h	equ	0xFDA
  1451                           fsr2l	equ	0xFD9
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _high_isr *****************
  1455 ;; Defined at:
  1456 ;;		line 58 in file "interrupts.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;		None               void
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;Total ram usage:       14 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		Interrupt level 2
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	intcode
  1484  000008                     __pintcode:
  1485                           	opt stack 0
  1486  000008                     _high_isr:
  1487                           	opt stack 26
  1488                           
  1489                           ;incstack = 0
  1490  000008  CFFA F012          	movff	pclath,??_high_isr
  1491  00000C  CFFB F013          	movff	pclatu,??_high_isr+1
  1492  000010  CFE9 F014          	movff	fsr0l,??_high_isr+2
  1493  000014  EDB9  F009         	call	int_func,f	;refresh shadow registers
  1494                           pclatu	equ	0xFFB
  1495                           pclath	equ	0xFFA
  1496                           tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           prodh	equ	0xFF4
  1501                           prodl	equ	0xFF3
  1502                           intcon	equ	0xFF2
  1503                           intcon2	equ	0xFF1
  1504                           postinc0	equ	0xFEE
  1505                           fsr0h	equ	0xFEA
  1506                           fsr0l	equ	0xFE9
  1507                           wreg	equ	0xFE8
  1508                           fsr1h	equ	0xFE2
  1509                           fsr1l	equ	0xFE1
  1510                           bsr	equ	0xFE0
  1511                           postinc2	equ	0xFDE
  1512                           postdec2	equ	0xFDD
  1513                           fsr2h	equ	0xFDA
  1514                           fsr2l	equ	0xFD9
  1515                           status	equ	0xFD8
  1516                           
  1517                           	psect	intcode_body
  1518  001372                     __pintcode_body:
  1519                           	opt stack 26
  1520  001372                     int_func:
  1521                           	opt stack 26
  1522  001372  0006               	pop		; remove dummy address from shadow register refresh
  1523  001374  CFEA F015          	movff	fsr0h,??_high_isr+3
  1524  001378  CFE1 F016          	movff	fsr1l,??_high_isr+4
  1525  00137C  CFE2 F017          	movff	fsr1h,??_high_isr+5
  1526  001380  CFD9 F018          	movff	fsr2l,??_high_isr+6
  1527  001384  CFDA F019          	movff	fsr2h,??_high_isr+7
  1528  001388  CFF3 F01A          	movff	prodl,??_high_isr+8
  1529  00138C  CFF4 F01B          	movff	prodh,??_high_isr+9
  1530  001390  CFF6 F01C          	movff	tblptrl,??_high_isr+10
  1531  001394  CFF7 F01D          	movff	tblptrh,??_high_isr+11
  1532  001398  CFF8 F01E          	movff	tblptru,??_high_isr+12
  1533  00139C  CFF5 F01F          	movff	tablat,??_high_isr+13
  1534                           
  1535                           ;interrupts.c: 77: if(INTCONbits.TMR0IF == 1)
  1536  0013A0  A4F2               	btfss	intcon,2,c	;volatile
  1537  0013A2  D013               	goto	i2l28
  1538                           
  1539                           ;interrupts.c: 78: {
  1540                           ;interrupts.c: 79: if(MotorDelayCounter > 30)
  1541  0013A4  BE4A               	btfsc	_MotorDelayCounter+1,7,c
  1542  0013A6  D00D               	goto	i2l906
  1543  0013A8  504A               	movf	_MotorDelayCounter+1,w,c
  1544  0013AA  E106               	bnz	i2l904
  1545  0013AC  0E1F               	movlw	31
  1546  0013AE  5C49               	subwf	_MotorDelayCounter,w,c
  1547  0013B0  B0D8               	btfsc	status,0,c
  1548  0013B2  D002               	goto	i2l904
  1549  0013B4  D006               	goto	i2l906
  1550  0013B6  D000               	goto	i2l904
  1551  0013B8                     i2l904:
  1552                           
  1553                           ;interrupts.c: 86: }
  1554                           ;interrupts.c: 89: MotorDelayCounter = 0;
  1555  0013B8  0E00               	movlw	0
  1556  0013BA  6E4A               	movwf	_MotorDelayCounter+1,c
  1557  0013BC  0E00               	movlw	0
  1558  0013BE  6E49               	movwf	_MotorDelayCounter,c
  1559  0013C0  D000               	goto	i2l906
  1560  0013C2                     i2l906:
  1561                           
  1562                           ;interrupts.c: 90: }
  1563                           ;interrupts.c: 92: MotorDelayCounter++;
  1564  0013C2  4A49               	infsnz	_MotorDelayCounter,f,c
  1565  0013C4  2A4A               	incf	_MotorDelayCounter+1,f,c
  1566                           
  1567                           ;interrupts.c: 93: INTCONbits.TMR0IF = 0;
  1568  0013C6  94F2               	bcf	intcon,2,c	;volatile
  1569  0013C8  D000               	goto	i2l28
  1570  0013CA                     i2l28:
  1571  0013CA  C01F  FFF5         	movff	??_high_isr+13,tablat
  1572  0013CE  C01E  FFF8         	movff	??_high_isr+12,tblptru
  1573  0013D2  C01D  FFF7         	movff	??_high_isr+11,tblptrh
  1574  0013D6  C01C  FFF6         	movff	??_high_isr+10,tblptrl
  1575  0013DA  C01B  FFF4         	movff	??_high_isr+9,prodh
  1576  0013DE  C01A  FFF3         	movff	??_high_isr+8,prodl
  1577  0013E2  C019  FFDA         	movff	??_high_isr+7,fsr2h
  1578  0013E6  C018  FFD9         	movff	??_high_isr+6,fsr2l
  1579  0013EA  C017  FFE2         	movff	??_high_isr+5,fsr1h
  1580  0013EE  C016  FFE1         	movff	??_high_isr+4,fsr1l
  1581  0013F2  C015  FFEA         	movff	??_high_isr+3,fsr0h
  1582  0013F6  C014  FFE9         	movff	??_high_isr+2,fsr0l
  1583  0013FA  C013  FFFB         	movff	??_high_isr+1,pclatu
  1584  0013FE  C012  FFFA         	movff	??_high_isr,pclath
  1585  001402  0011               	retfie		f
  1586  001404                     __end_of_high_isr:
  1587                           	opt stack 0
  1588                           pclatu	equ	0xFFB
  1589                           pclath	equ	0xFFA
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           prodh	equ	0xFF4
  1595                           prodl	equ	0xFF3
  1596                           intcon	equ	0xFF2
  1597                           intcon2	equ	0xFF1
  1598                           postinc0	equ	0xFEE
  1599                           fsr0h	equ	0xFEA
  1600                           fsr0l	equ	0xFE9
  1601                           wreg	equ	0xFE8
  1602                           fsr1h	equ	0xFE2
  1603                           fsr1l	equ	0xFE1
  1604                           bsr	equ	0xFE0
  1605                           postinc2	equ	0xFDE
  1606                           postdec2	equ	0xFDD
  1607                           fsr2h	equ	0xFDA
  1608                           fsr2l	equ	0xFD9
  1609                           status	equ	0xFD8
  1610                           pclatu	equ	0xFFB
  1611                           pclath	equ	0xFFA
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           prodh	equ	0xFF4
  1617                           prodl	equ	0xFF3
  1618                           intcon	equ	0xFF2
  1619                           intcon2	equ	0xFF1
  1620                           postinc0	equ	0xFEE
  1621                           fsr0h	equ	0xFEA
  1622                           fsr0l	equ	0xFE9
  1623                           wreg	equ	0xFE8
  1624                           fsr1h	equ	0xFE2
  1625                           fsr1l	equ	0xFE1
  1626                           bsr	equ	0xFE0
  1627                           postinc2	equ	0xFDE
  1628                           postdec2	equ	0xFDD
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633                           	psect	rparam
  1634  0000                     pclatu	equ	0xFFB
  1635                           pclath	equ	0xFFA
  1636                           tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           prodh	equ	0xFF4
  1641                           prodl	equ	0xFF3
  1642                           intcon	equ	0xFF2
  1643                           intcon2	equ	0xFF1
  1644                           postinc0	equ	0xFEE
  1645                           fsr0h	equ	0xFEA
  1646                           fsr0l	equ	0xFE9
  1647                           wreg	equ	0xFE8
  1648                           fsr1h	equ	0xFE2
  1649                           fsr1l	equ	0xFE1
  1650                           bsr	equ	0xFE0
  1651                           postinc2	equ	0xFDE
  1652                           postdec2	equ	0xFDD
  1653                           fsr2h	equ	0xFDA
  1654                           fsr2l	equ	0xFD9
  1655                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62      81
    BANK0           128     84      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sensorComputation@sensorTemp	PTR int [10] size(2) Largest target is 80
		 -> sensorUpdate@sensorTemp(BANK0[80]), 


Critical Paths under _main in COMRAM

    _main->_sensorUpdate
    _sensorUpdate->_sensorComputation
    _sensorComputation->_MAX
    _sensorComputation->_MIN
    _MIN->___wmul
    _MAX->___wmul

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sensorUpdate

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2972
                _ConfigureOscillator
                            _InitApp
                       _sensorUpdate
 ---------------------------------------------------------------------------------
 (1) _sensorUpdate                                        90    90      0    2972
                                             56 COMRAM     6     6      0
                                              0 BANK0     84    84      0
                             ___wmul
                  _sensorComputation
 ---------------------------------------------------------------------------------
 (2) _sensorComputation                                   14    12      2    2075
                                             42 COMRAM    14    12      2
                                _MAX
                                _MIN
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     689
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     406
                                             31 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _MIN                                                  5     1      4     194
                                             37 COMRAM     5     1      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _MAX                                                  5     1      4     194
                                             37 COMRAM     5     1      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _sensorUpdate
     ___wmul
     _sensorComputation
       _MAX
         ___wmul (ARG)
       _MIN
         ___wmul (ARG)
       ___awdiv
       ___wmul

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     54      54       5       65.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      51       1       63.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5      34        0.0%
DATA                 0      0      A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 10 19:05:02 2015

                ___awdiv@sign 0025                            bsr 000FE0           ___wmul@multiplicand 0022  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000  
                         l150 11E8                           l163 1480                           l171 1460  
                         l164 1488                           l157 124A                           l167 14A8  
                         l168 14B0                           l364 1370                           l866 141C  
                         l990 1324                           l982 1304                           l992 132C  
                         l976 12F2                           l988 131A                  __CFG_CPB$OFF 000000  
                         _MAX 148A                           _MIN 1462                           u370 1020  
                __CFG_CPD$OFF 000000                           u380 103C                           u455 1256  
                         wreg 000FE8                          ?_MAX 0026                          ?_MIN 0026  
                        MAX@a 0026                          MAX@b 0028                          MIN@a 0026  
                        MIN@b 0028                  __CFG_WDT$OFF 000000                          l1000 134A  
                        l1004 1356                          l1030 117A                          l1008 1366  
                        l1024 103E                          l1034 118A                          l1018 1022  
                        l1050 1218                          l1028 1096                          l1044 11F4  
                        l1054 1232                          l1064 12C4                          l1048 120E  
                        l1072 14D2                          l1068 12CE                          _LATC 000F8B  
                        i2l28 13CA                          _main 14C8                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          fsr2l 000FD9                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 00A2  
               __CFG_IESO$OFF 000000   sensorComputation@sensorTemp 002B                 __CFG_MCLRE$ON 000000  
                ___param_bank 000010               __end_of_InitApp 143A                         ??_MAX 002A  
                       ??_MIN 002A    __size_of_sensorComputation 01E4                         ?_main 0001  
             __end_of___awdiv 1372                         _T0CON 000FD5               ___awdiv@divisor 0022  
                       i2l904 13B8                         i2l906 13C2               ___awdiv@counter 0024  
                       _TRISC 000F94           _ConfigureOscillator 14DC                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               __end_of_low_isr 00A2                         tablat 000FF5  
                       status 000FD8          ?_ConfigureOscillator 0001               __initialization 14B2  
                __end_of_main 14DC                        ??_main 003F                 __activetblptr 000002  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _ADRESH 000FC4                        _ADRESL 000FC3              ___awdiv@dividend 0020  
                      _INTCON 000FF2                        _OSCCON 000FD3                     ??_InitApp 0020  
       ??_ConfigureOscillator 0020                __CFG_XINST$OFF 000000            sensorComputation@i 0035  
          sensorComputation@j 0037              __end_of_high_isr 1404                        ___wmul 143A  
                   ??___awdiv 0024                __CFG_STVREN$ON 000000                        clear_0 14B8  
            ___awdiv@quotient 0026                  __mediumconst 0000                     ??_low_isr 0001  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0080       __end_of__initialization 14BE               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 0001                    _delay_time 004D  
           _MotorDelayCounter 0049                       ?___wmul 0020                       _INTCON2 000FF1  
                     _OSCTUNE 000F9B                     ?_high_isr 0001                 _LMotorCounter 004F  
                     _InitApp 1404                       __Hparam 0000                       __Lparam 0000  
                     ___awdiv 12DC               __size_of___wmul 0028                  __psmallconst 1000  
                     __pcinit 14B2                       __ramtop 1000                       __ptext0 14C8  
                     __ptext1 11EA                       __ptext2 1006                       __ptext3 143A  
                     __ptext4 12DC                       __ptext5 1462                       __ptext6 148A  
                     __ptext7 1404                       __ptext8 14DC                  __size_of_MAX 0028  
                __size_of_MIN 0028                       _low_isr 0018                 ?_sensorUpdate 0001  
                  ??_high_isr 0012                __pintcode_body 1372          end_of_initialization 14BE  
               __Lmediumconst 0000                       int_func 1372                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                     _PORTBbits 000F81  
                   _TRISBbits 000F93                     _TRISEbits 000F96                ??_sensorUpdate 0039  
 __end_of_ConfigureOscillator 14E6                __end_of___wmul 1462           start_initialization 14B2  
                 __end_of_MAX 14B2                   __end_of_MIN 148A              __CFG_OSC$INTIO67 000000  
                    ??___wmul 0024              __CFG_LPT1OSC$OFF 000000                _sensorLocation 1001  
                 __pbssCOMRAM 003F                 __pcstackBANK0 0080        sensorUpdate@sensorTemp 0080  
           __size_of_high_isr 13FC                      ?_InitApp 0001             __CFG_CCP2MX$PORTC 000000  
                   _algorithm 0051                     __pintcode 0008                      ?___awdiv 0020  
        __end_of_sensorUpdate 12DC        __end_of_sensorLocation 1005                   __pintcodelo 0018  
                 __smallconst 1000                      ?_low_isr 0001                ___wmul@product 0024  
            __CFG_WDTPS$32768 000000                    _ADCON0bits 000FC2             ___wmul@multiplier 0020  
               _RMotorCounter 0050              __size_of_InitApp 0036                      __Hrparam 0000  
        sensorComputation@max 002F                      __Lrparam 0000          sensorComputation@min 0031  
        sensorComputation@sum 0033            __CFG_BOREN$SBORDIS 000000              __size_of___awdiv 0096  
            __size_of_low_isr 008A                      _high_isr 0008            _LMotorDelayCounter 0047  
          _RMotorDelayCounter 004B                 __size_of_main 0014         __size_of_sensorUpdate 00F2  
__size_of_ConfigureOscillator 000A             _sensorComputation 1006                    _INTCONbits 000FF2  
          ?_sensorComputation 002B                 sensorUpdate@i 00D0                 sensorUpdate@j 00D2  
                _sensorUpdate 11EA                      intlevel1 0000                      intlevel2 0000  
         ??_sensorComputation 002D     __end_of_sensorComputation 11EA                   _sensorValue 003F  
